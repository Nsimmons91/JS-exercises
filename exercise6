// Week 3 - Arrays and Objects

// In the following exercises, you will need to place your code or answer underneath each
// exercise prompt.

// First try answering these without using references or looking up any information.
// Then, check your answer by using references and/or running your code.
// You can run your JS code using the Chrome or Firefox Developer tools, or by using Node.js.
// Feel free to update your answers if you got them wrong at first -- this exercise is for your own learning.
// But make sure you understand why the correct answer is right.

// Exercise 1. Make an empty array named animals
let animals = []; // Step 1: Create an empty array

// Exercise 2. Add the string "frog" to the array
animals.push("frog"); // Step 2: Add "frog" to the array

// Exercise 3. Add 4 more animals of your choice to the array. Try to add all of them in one line of code.

animals.push("cat", "dog", "elephant", "tiger"); 

// Step 3: Add 4 more animals
// Exercise 4. Update the first item in the array to be "gorilla"

animals[0] = "gorilla"; // Step 4: Update the first item to "gorilla"


// Exercise 5. Print the number of items in the array (use the array property that will give you this information)

let animals = []; // Step 1
animals.push("frog"); // Step 2
animals.push("cat", "dog", "elephant", "tiger"); // Step 3
animals[0] = "gorilla"; // Step 4

// Print the number of items in the array
console.log("Number of items in the array: " + animals.length);



// Exercise 6. Print the first item in the array
let animals = []; // Step 1
animals.push("frog"); // Step 2
animals.push("cat", "dog", "elephant", "tiger"); // Step 3
animals[0] = "gorilla"; // Step 4

// Print the first item in the array
console.log("The first item in the array is: " + animals[0]);

// Exercise 7. Print the last item in the array (as part of your answer, use the same array property you used in exercise 5 above)

let animals = []; // Step 1
animals.push("frog"); // Step 2
animals.push("cat", "dog", "elephant", "tiger"); // Step 3
animals[0] = "gorilla"; // Step 4

// Print the last item in the array
console.log("The last item in the array is: " + animals[animals.length - 1]);

// Exercise 8. Remove the last item from the array
let animals = []; // Step 1
animals.push("frog"); // Step 2
animals.push("cat", "dog", "elephant", "tiger"); // Step 3
animals[0] = "gorilla"; // Step 4

// Remove the last item from the array
animals.pop(); // This will remove "tiger"

// Print the updated array to verify
console.log("Updated animals array: ", animals);

// Exercise 9. Now make a new array named assortedThings that contains at least 3 strings and 3 numbers.
let assortedThings = ["apple", "banana", "cherry", 42, 7, 19]; // Creating the array with 3 strings and 3 numbers

// Print the assortedThings array to verify
console.log("Assorted things array: ", assortedThings);

// Exercise 10. Write a for loop that iterates through the assortedThings array and prints each index and item, such as:
// Item #0 is potato
// Item #1 is 4
// Item #2 is Hello World
// ...let assortedThings = ["apple", "banana", "cherry", 42, 7, 19]; // Existing array

// For loop to iterate through the assortedThings array
for (let i = 0; i < assortedThings.length; i++) {
    console.log("Item #" + i + " is " + assortedThings[i]);
}

// Exercise 11. Write a function that takes an array of numbers as a parameter. For each number in the array,
// print the number and "BIG" if it's over 100, "small" if it's between 0 and 100, and "negative" if
// it's less than 0. Example:
// if the array is [-2, 200, 50], print:
// -2 negative
// 200 BIG
// 50 small
//function analyzeNumbers(numbers) {
    for (let i = 0; i < numbers.length; i++) {
        const num = numbers[i];
        if (num > 100) {
            console.log(num + " BIG");
        } else if (num >= 0 && num <= 100) {
            console.log(num + " small");
        } else {
            console.log(num + " negative");
        }
    }
}

// Function calls to test the analyzeNumbers function
analyzeNumbers([-2, 200, 50]); // Test with a mix of numbers
analyzeNumbers([150, 99, -10]); // Test with different ranges
analyzeNumbers([0, 100, 101]); // Test with boundary numbers

// Then write some function calls you would use to test your function.

// Exercise 12. Make an object called me that contains the following keys: name, favoriteAnimal, favoriteNumber
// The values of those keys can be whatever you choose.
let me = {
    name: "Nina",              // Name set to Nina
    favoriteAnimal: "elephant", // Favorite animal set to elephant
    favoriteNumber: 7          // You can keep or change the favorite number
};

// Print the object to verify
console.log(me);

// Exercise 13. Add another 2 keys and values to the object (you choose what they are)
let me = {
    name: "Nina",                     // Name
    favoriteAnimal: "elephant",       // Favorite animal
    favoriteNumber: 7,                // Favorite number
    favoritePerfume: "Valentino Born in Roma", // Favorite perfume
    favoriteFood: "Salmon and Steak Hibachi"   // Favorite food
};

// Print the updated object to verify
console.log(me);

// Exercise 14. Update the favoriteAnimal value to something different
let me = {
    name: "Nina",                     // Name
    favoriteAnimal: "elephant",       // Favorite animal
    favoriteNumber: 7,                // Favorite number
    favoritePerfume: "Valentino Born in Roma", // Favorite perfume
    favoriteFood: "Salmon and Steak Hibachi"   // Favorite food
};

// Update the favoriteAnimal value
me.favoriteAnimal = "Dolphins"; // Change to Dolphins

// Print the updated object to verify
console.log(me);

// Exercise 15. Print the value of favoriteAnimal.
// Note: there are at least 2 ways to get the value of a key, try to write both.
let me = {
    name: "Nina",
    favoriteAnimal: "Dolphins",
    favoriteNumber: 7,
    favoritePerfume: "Valentino Born in Roma",
    favoriteFood: "Salmon and Steak Hibachi"
};

// Method 1: Using dot notation
console.log(me.favoriteAnimal);

// Method 2: Using bracket notation
console.log(me["favoriteAnimal"]);

// Congrats, you made it to the end!
// Did you find this easy or hard? If you used references, which ones helped you?
// Please answer in a comment below.
//This waas harder, but adding faacts bout me madde it a little easier to understad while using the same references. 
//I remembered some of the methods from previous assignments during the prework weeks such as the .pop method 
//and its purpose.

